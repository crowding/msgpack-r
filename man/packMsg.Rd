% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/encode.R
\name{packMsg}
\alias{packMsg}
\alias{packOpts}
\title{Encode an R object into a raw vector using msgpack.}
\usage{
packMsg(x, ...)

packOpts(compatible = FALSE, as_is = FALSE, use_dict = TRUE,
  max_size = NA, buf_size = 512, package)
}
\arguments{
\item{x}{An R object, which can be null, a vector, list,
environment, raw, or any combinations thereof.

Strings are re-encoded to UTF-8 if necessary. Integral
real values may be emitted as integers to save space.

Objects having class \code{AsIs,} and their contents, are encoded
without using scalars (same as when option \code{as_is} is TRUE) and are
not further pre-processed.

A hook for pre-processing R objects before packing is supported, by
giving the object an S3 \link{class} and implementing a method
"prepack". For instance, \link{prepack.data.frame(x)} simply adds the
\link{AsIs} class to \code{x}.

Environment objects are written with the keys in sorted order, but
named vectors are written in the order which the entries appear.

Object attributes other than \code{name} and \code{class} are ignored.}

\item{...}{Options controlling packing, as described on this page.}

\item{compatible}{If TRUE, emitted bytes conform to version 1.0 of
msgpack encoding. This means that msgpack strings are used for
raw objects.}

\item{as_is}{If TRUE, singletons (R vectors of length 1 having no
names attribute) are encoded as msgpack arrays of length
\enumerate{
\item Otherwise singleton vectors are simplified to msgpack scalars.
}}

\item{use_dict}{If TRUE, vectors having a "names" attribute are
encoded as dicts. If false, they are encoded as arrays and the
names are discarded}

\item{max_size}{The largest buffer that will be allocated.}

\item{buf_size}{The initial amount of memory, in bytes to allocate
for packing each message. Currently there is little reason to
change the default.}

\item{warn}{Whether to emit warnings.}
}
\value{
An object of class "raw".
}
\description{
Encode an R object into a raw vector using msgpack.
}
